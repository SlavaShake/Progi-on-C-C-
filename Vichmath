// VichMath.cpp: определяет точку входа для консольного приложения.
//

#include "stdafx.h"
#include <iostream>
#include <math.h>
#include <ctime>
#include <iomanip>
#include <fstream>
# define M_PI       3.14159265 //pi

using namespace std;

void FillingMass(int dx, float de, int w, float n, int Vn);
float Function(float x, float n, int Vn);

int _tmain(int argc, _TCHAR* argv[])
{	
	int xb=0,Vn,w;
	float xe=float(M_PI)/2,n;

	char k; k = 'Y';
	while (k == 'y' || k == 'Y')
	{
		cout << "Enter the version number, N= ";
		cin >> Vn;
		cout << endl;
		n = float(Vn) / 2;
		cout << "Input frequency for function, W= ";
		cin >> w;
		cout << endl;
		FillingMass(xb, xe, w, n, Vn);
		cout << "You want to continue the work program? (Y/n)  k = ";
		cin >> k;
	}
	system("pause");
	return 0;
}
void FillingMass(int xb, float xe, int w, float n, int Vn)
{
	unsigned int start_time = clock(); // начальное время
	ofstream textin;// создаём объект для записи в файл
	ofstream textout;// создаём объект для чтения файла
	textin.open("VichMath.txt", ios_base::app);// связываем объект с файлом
	//открыть файл для записи в конец файла, если такой имеется
	float **mass = new float* [2];//объявление динамического массива
	for (int count = 0; count < 2; count++)
	mass[count] = new float[w];
	textin << "Variant = " << Vn << ";" << endl;
	textin << "Frequency for function, W=" << w << ";" << endl << endl;
	for (int k = 0; k < w; ++k)
	{
		float dx = (xe - xb) / w;
		float c = xb + dx / 2;
		mass[0][k] = c + dx*k;
		mass[1][k] = Function(mass[0][k], n, Vn);
	}
	for (int i = 0; i < 2; ++i)
	{
		for (int j = 0; j < w; ++j)
		{
			cout << " | " << fixed << setprecision(4) << mass[i][j] << " | ";
		}
		cout << endl;
	}

	for (int k = 0; k < w; ++k)
	{
		textin << "c[" << (k + 1) << "] = " << mass[0][k] << endl;
		textin << "F(c[" << (k + 1) << "]) = " << mass[1][k] << endl << endl;
	}
	// высвобождение памяти отводимой под двумерный динамический массив:
	for (int count = 0; count < 2; count++)
		delete[]  mass[count];
	delete mass;
	unsigned int end_time = clock(); // конечное время
	unsigned int search_time = end_time - start_time; // искомое время
	//      где 2 – количество строк в массиве
	cout << "Runtime program = " << search_time / 1000.0 << endl; // время работы программы   
	textin << "Runtime program = " << search_time / 1000.0 << endl << endl << endl << endl;

	textin.close();//закрыли фаил
	
}
float Function(float x,float n, int Vn)
{
	if (Vn < 15){ return  (sin(n*x / (n + x + 1))); }
	else{ return  (sin(n / (x + 1)) + pow(cos(n*x), 2)); }
}
